
Advanced Data Structure{
	Array:
		RangeSum
	Segment trees:
		Normal:
			KGSS
			FREQUENT
			DCEPC206
			GSS1
			GSS3
			PATULJCI(Read MOORE voting algorithm first)
		Lazy:
			MULTQ3
			DCEPC11I
			Horrible
			LITE	
			POSTERS
			RPAR
	BIT:
		Normal:
			DCEPC206
			AKVQLD03
		+some other logic:
			INCSEQ
			INCDSEQ
			INVCNT
			KOILINE
			SAS001
			SSEQ
	TRIE:
		MORSE
		SUBXOR
	SRD+MO's Algo:	
		DQUERY
}

DP{
	EASY
		ACODE
		AIBOHP
		ANARC05H
		BAT3
		BYTESM2
		CODEM4
		CODERE3(LIS)
		COUNT
		CRSCNTRY(LCS)
		DBALLZ
		DCEPC501
		DCOWS
		EASYPROB
		MBLAST
		NGON
		SCUBADIV ( GOOD ONE )
		NOCHANGE
		NOVICE43
		PART
		PIGBANK
		TRT
		TWENDS
		Knapsack:
			KNAPSACK
		Edit Distance:
			EDIST
		Top Down:
			COINS
	
	MEDIUM
		BAT1
		ACMAKER
		BAT2
		DSUBSEQ
		FPOLICE
		MBALL
		MINVEST
		MIXTURES
		MKBUDGET
		MMAXPER
		MSTRING
		ROCK
		SCALES
		BCAKE - TOUGH
		BORW - TOUGH
		GNY07H - TOUGH
		MARTIAN - TOUGH
		MPILOT - TOUGH
		SQBR - TOUGH
		SSHUFFLE - TOUGH
		Histogram stack technique:
			HISTOGRA
			CTGAME
	LSORT
	MENU	
	SEQPAR
	THREECOL

	M3TILE
	// M4TILE (Write recursion for practice)
	M5TILE

	Easy:

	Hard:
		FCANDY
		Convex Hull Technique:
			ACQUIRE
			APIO10A
		Bit Masking:
			CODESPTD
			MNTILE
}

String{
	Booths's Algo:
		BEADS
		MINMOVE
}

Misc{
	BITDIFF
	MAY99_3
	POUR1
	Greedy:
		BLOPER
		CEQU
		CHOCOLA(tricky)
}