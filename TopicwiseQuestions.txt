
Advanced Data Structure{
	Array:
		RangeSum
	Segment trees:
		Normal:
			KGSS
			FREQUENT
			DCEPC206
			GSS1
			GSS3
			PATULJCI(Read MOORE voting algorithm first)
		Lazy:
			MULTQ3
			DCEPC11I
			Horrible
			LITE	
			POSTERS
			RPAR
	BIT:
		Normal:
			DCEPC206
			AKVQLD03
		+some other logic:
			INCSEQ
			INCDSEQ
			INVCNT
			KOILINE
			SAS001
			SSEQ
	TRIE:
		MORSE
		SUBXOR
	SRD+MO's Algo:	
		DQUERY
}

DP{
	ACMAKER - TOUGH
	ACODE - EASY
	AIBOHP - EAST
	ANARC05H - EASY
	BAT1 - TOUGH
	BAT2 - TOUGH
	BAT3 - EASY
	BCAKE - TOUGH
	BORW - TOUGH
	BYTESM2 - EASY
	CODEM4 - EASY
	CODERE3(LIS) - EASY
	COINS - EASY
	COUNT - EASY
	CRSCNTRY(LCS) - EASY
	DBALLZ - EASY
	DCEPC501 - EASY
	DCOWS - EASY
	DSUBSEQ - MEDIUM
	EASYPROB - EASY
	FPOLICE - MEDIUM
	GNY07H - TOUGH
	LSORT
	MARTIAN - TOUGH
	MBALL - MEDIUM
	MBLAST - EASY
	MENU	
	MINVEST - MEDIUM
	MIXTURES - MEDIUM
	MKBUDGET - MEDIUM
	MMAXPER - MEDIUM
	MPILOT - TOUGH
	MSTRING - MEDIUM
	NGON - EASY
	NOCHANGE - EASY
	NOVICE43 - EASY
	PART - EASY
	PIGBANK - EASY
	ROCK - MEDIUM
	SCALES - MEDIUM
	SCUBADIV - EASY ( GOOD ONE )
	SEQPAR
	SQBR - TOUGH
	SSHUFFLE - TOUGH
	THREECOL
	TRT - EASY
	TWENDS - EASY

	M3TILE
	// M4TILE (Write recursion for practice)
	M5TILE


	HISTOGRA
	CTGAME

	Easy:
		Knapsack:
			KNAPSACK
		Edit Distance:
			EDIST
		Top Down:
			COINS

	Hard:
		FCANDY
		Convex Hull Technique:
			ACQUIRE
			APIO10A
		Bit Masking:
			CODESPTD
			MNTILE
}

String{
	Booths's Algo:
		BEADS
		MINMOVE
}

Misc{
	BITDIFF
	MAY99_3
	POUR1
	Greedy:
		BLOPER
		CEQU
		CHOCOLA(tricky)
}
